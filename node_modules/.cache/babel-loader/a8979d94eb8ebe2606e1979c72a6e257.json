{"ast":null,"code":"export const initialState = {\n  basket: []\n};\nexport const getBasketTotal = basket => function reducer(state, action) {\n  console.log(action);\n\n  switch (action.type) {\n    case 'ADD_TO_BASKET':\n      //LOGIC FOR ADD PRODUCT TO BASKET\n      return { ...state,\n        basket: [...state.basket, action.item]\n      };\n\n    case 'REMOVE_FROM_BASKET':\n      //LOGIC FOR REMOVING ITEM FROM BASKET\n      let newBasket = [...state.basket];\n      const index = state.basket.findIndex(basketItem => basketItem.id === action.id);\n\n      if (index >= 0) {\n        newBasket.splice(index, 1);\n      } else {\n        console.warn(`Can't remove product (id: ${action.id} it's not in basket!)`);\n      }\n\n      return { ...state,\n        basket: newBasket\n      };\n\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"sources":["E:/code/amazon-clone/src/reducer.js"],"names":["initialState","basket","getBasketTotal","reducer","state","action","console","log","type","item","newBasket","index","findIndex","basketItem","id","splice","warn"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;AACxBC,EAAAA,MAAM,EAAE;AADgB,CAArB;AAIP,OAAO,MAAMC,cAAc,GAAID,MAAD,IAG9B,SAASE,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,UAAQA,MAAM,CAACG,IAAf;AACI,SAAK,eAAL;AACI;AACA,aAAO,EACH,GAAGJ,KADA;AAEHH,QAAAA,MAAM,EAAE,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAkBI,MAAM,CAACI,IAAzB;AAFL,OAAP;;AAIJ,SAAK,oBAAL;AACI;AACA,UAAIC,SAAS,GAAG,CAAC,GAAGN,KAAK,CAACH,MAAV,CAAhB;AACA,YAAMU,KAAK,GAAGP,KAAK,CAACH,MAAN,CAAaW,SAAb,CAAwBC,UAAD,IAAgBA,UAAU,CAACC,EAAX,KAAkBT,MAAM,CAACS,EAAhE,CAAd;;AACA,UAAIH,KAAK,IAAI,CAAb,EAAgB;AACZD,QAAAA,SAAS,CAACK,MAAV,CAAkBJ,KAAlB,EAAyB,CAAzB;AACH,OAFD,MAGK;AACDL,QAAAA,OAAO,CAACU,IAAR,CAAc,6BAA4BX,MAAM,CAACS,EAAG,uBAApD;AACH;;AACD,aAAO,EACH,GAAGV,KADA;AAEHH,QAAAA,MAAM,EAAES;AAFL,OAAP;;AAIJ;AACI,aAAON,KAAP;AAtBR;AAyBH,CA9BM;AAgCP,eAAeD,OAAf","sourcesContent":["export const initialState = {\r\n    basket: [],\r\n}\r\n\r\nexport const getBasketTotal = (basket) => \r\n    \r\n\r\nfunction reducer(state, action) {\r\n    console.log(action)\r\n    switch (action.type) {\r\n        case 'ADD_TO_BASKET':\r\n            //LOGIC FOR ADD PRODUCT TO BASKET\r\n            return {\r\n                ...state,\r\n                basket: [...state.basket, action.item]\r\n            }\r\n        case 'REMOVE_FROM_BASKET':\r\n            //LOGIC FOR REMOVING ITEM FROM BASKET\r\n            let newBasket = [...state.basket]\r\n            const index = state.basket.findIndex((basketItem) => basketItem.id === action.id)\r\n            if (index >= 0) {\r\n                newBasket.splice( index, 1 )\r\n            }\r\n            else {\r\n                console.warn(`Can't remove product (id: ${action.id} it's not in basket!)`)\r\n            }\r\n            return {\r\n                ...state,\r\n                basket: newBasket\r\n            }\r\n        default:\r\n            return state\r\n        \r\n    }\r\n}\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}